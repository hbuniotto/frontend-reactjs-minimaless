{"ast":null,"code":"var _jsxFileName = \"/Users/humbertobuniotto/Desktop/Ironhack/Module3/frontend-reactjs-minimaless/src/views/Account/components/AccountProfile/AccountProfile.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardActions, CardContent, Avatar, Divider, Button, TextField, Grid } from '@material-ui/core';\nimport jwt_decode from 'jwt-decode';\nimport Axios from 'axios';\nimport Alert from '@material-ui/lab/Alert';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  details: {\n    display: 'flex'\n  },\n  input: {\n    display: 'none'\n  },\n  uploadbtn: {\n    textAlign: 'center',\n    marginLeft: theme.spacing(3)\n  },\n  avatar: {\n    marginLeft: 15,\n    height: 110,\n    width: 100,\n    flexShrink: 0,\n    flexGrow: 0\n  },\n  uploadPictureButton: {\n    marginLeft: theme.spacing(3)\n  },\n  updateButton: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nconst AccountProfile = props => {\n  const {\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const user = {\n    name: 'Humberto Buniotto',\n    city: 'Miami Beach',\n    country: 'USA',\n    timezone: 'GTM-5',\n    avatar: '/images/avatars/avatar-demo.png'\n  };\n  const [userState, setUserState] = useState({\n    values: {\n      firstName: '',\n      lastName: '',\n      phone: '',\n      email: '',\n      street: '',\n      city: '',\n      state: '',\n      zipcode: '',\n      avatar: []\n    },\n    updateSuccess: false\n  });\n  useEffect(() => {\n    Axios.get('/api/profile').then(res => {\n      const decoded = jwt_decode(localStorage.jwtToken);\n\n      if (res.data.email === decoded.email) {\n        setUserState(userState => ({ ...userState,\n          values: { ...userState.values,\n            firstName: res.data.firstName,\n            lastName: res.data.lastName,\n            phone: res.data.phone,\n            email: res.data.email,\n            street: res.data.address.street,\n            city: res.data.address.city,\n            state: res.data.address.state,\n            zipcode: res.data.address.zipcode,\n            avatar: res.data.avatar\n          }\n        }));\n      } else {\n        console.log('email doesn\\'t match');\n      } // console.log(res.data)\n\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  const handleChange = event => {\n    event.persist();\n    setUserState(userState => ({ ...userState,\n      values: { ...userState.values,\n        [event.target.name]: event.target.value\n      }\n    }));\n  };\n\n  const handleUpdate = e => {\n    e.preventDefault();\n    const userDataUpdate = {\n      firstName: userState.values.firstName,\n      lastName: userState.values.lastName,\n      phone: userState.values.phone,\n      email: userState.values.email,\n      street: userState.values.street,\n      city: userState.values.city,\n      state: userState.values.state,\n      zipcode: userState.values.zipcode,\n      avatar: userState.values.avatar\n    }; // console.log(userDataUpdate)\n\n    Axios.post('/api/profile', userDataUpdate).then(res => {\n      // console.log(res.data)\n      setUserState(userState => ({ ...userState,\n        updateSuccess: true\n      }));\n      setTimeout(() => {\n        setUserState(userState => ({ ...userState,\n          updateSuccess: false\n        }));\n      }, 3000);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleImageChange = e => {\n    // this.setState({uploading:true});\n    let formData = new FormData();\n    const config = {\n      header: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    formData.append(\"images\", e.target.files[0]);\n    Axios.post('/api/profile/avatar', formData, config).then(res => {\n      setUserState(userState => ({ ...userState,\n        values: { ...userState.values,\n          avatar: [...userState.values.avatar, res.data]\n        }\n      }));\n    }).catch(err => {\n      console.log(err);\n    });\n  }; //  console.log(userState.values.avatar[userState.values.avatar.length - 1])\n\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    src: userState.values.avatar && userState.values.avatar[userState.values.avatar.length - 1] ? userState.values.avatar[userState.values.avatar.length - 1].url : user.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.uploadbtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    accept: \"image/*\",\n    className: classes.input,\n    id: \"contained-button-file\",\n    multiple: true,\n    type: \"file\",\n    onChange: handleImageChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"contained-button-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, \"UPLOAD PICTURE\"))))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    onSubmit: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"First name\",\n    margin: \"dense\",\n    name: \"firstName\",\n    onChange: handleChange,\n    required: true,\n    value: userState.values.firstName,\n    variant: \"outlined\",\n    placeholder: \"John\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Last name\",\n    margin: \"dense\",\n    name: \"lastName\",\n    onChange: handleChange,\n    required: true,\n    value: userState.values.lastName,\n    variant: \"outlined\",\n    placeholder: \"Doe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Phone Number\",\n    type: \"number\",\n    margin: \"dense\",\n    name: \"phone\",\n    onChange: handleChange,\n    required: true,\n    value: userState.values.phone,\n    variant: \"outlined\",\n    placeholder: \"(305) 555-1234\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Email Address\",\n    type: \"email\",\n    margin: \"dense\",\n    name: \"email\",\n    onChange: handleChange,\n    required: true,\n    value: userState.values.email,\n    variant: \"outlined\",\n    placeholder: \"you@email.com\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Street\",\n    margin: \"dense\",\n    name: \"street\",\n    onChange: handleChange,\n    required: true,\n    value: userState.values.street,\n    variant: \"outlined\",\n    placeholder: \"100 Happy Street\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"City\",\n    margin: \"dense\",\n    name: \"city\",\n    onChange: handleChange,\n    required: true,\n    value: userState.values.city,\n    variant: \"outlined\",\n    placeholder: \"Miami\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField // need to make this a dropdown with states from backend\n  , {\n    fullWidth: true,\n    label: \"State\",\n    margin: \"dense\",\n    name: \"state\",\n    onChange: handleChange,\n    required: true,\n    value: userState.values.state,\n    variant: \"outlined\",\n    placeholder: \"Miami\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Zip Code\",\n    type: \"number\",\n    margin: \"dense\",\n    name: \"zipcode\",\n    onChange: handleChange,\n    required: true,\n    value: userState.values.zipcode,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 9\n    }\n  }), userState.updateSuccess ? /*#__PURE__*/React.createElement(Alert, {\n    severity: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 11\n    }\n  }, \"Profile updated\") : '', /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.updateButton,\n    color: \"primary\",\n    variant: \"outlined\",\n    type: \"submit\",\n    onSubmit: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 11\n    }\n  }, \"Update\")))));\n};\n\nAccountProfile.propTypes = {\n  className: PropTypes.string\n};\nexport default AccountProfile;","map":{"version":3,"sources":["/Users/humbertobuniotto/Desktop/Ironhack/Module3/frontend-reactjs-minimaless/src/views/Account/components/AccountProfile/AccountProfile.js"],"names":["React","useState","useEffect","PropTypes","clsx","makeStyles","Card","CardActions","CardContent","Avatar","Divider","Button","TextField","Grid","jwt_decode","Axios","Alert","useStyles","theme","root","details","display","input","uploadbtn","textAlign","marginLeft","spacing","avatar","height","width","flexShrink","flexGrow","uploadPictureButton","updateButton","AccountProfile","props","className","rest","classes","user","name","city","country","timezone","userState","setUserState","values","firstName","lastName","phone","email","street","state","zipcode","updateSuccess","get","then","res","decoded","localStorage","jwtToken","data","address","console","log","catch","err","handleChange","event","persist","target","value","handleUpdate","e","preventDefault","userDataUpdate","post","setTimeout","handleImageChange","formData","FormData","config","header","append","files","length","url","propTypes","string"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Divider,\r\n  Button,\r\n  TextField,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport jwt_decode from 'jwt-decode';\r\nimport Axios from 'axios';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  details: {\r\n    display: 'flex'\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  uploadbtn: {\r\n      textAlign: 'center',\r\n      marginLeft: theme.spacing(3)\r\n  },\r\n  avatar: {\r\n    marginLeft: 15,\r\n    height: 110,\r\n    width: 100,\r\n    flexShrink: 0,\r\n    flexGrow: 0\r\n  },\r\n  uploadPictureButton: {\r\n    marginLeft: theme.spacing(3)\r\n  },\r\n\r\n  updateButton : {\r\n    marginLeft: theme.spacing(1)\r\n    \r\n  }\r\n}));\r\n\r\nconst AccountProfile = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const user = {\r\n    name: 'Humberto Buniotto',\r\n    city: 'Miami Beach',\r\n    country: 'USA',\r\n    timezone: 'GTM-5',\r\n    avatar: '/images/avatars/avatar-demo.png'\r\n  };\r\n\r\n  const [userState, setUserState] = useState({\r\n    values: {\r\n      firstName: '',\r\n      lastName: '',\r\n      phone: '',\r\n      email: '',\r\n      street: '',\r\n      city: '',\r\n      state: '',\r\n      zipcode: '',\r\n      avatar: []\r\n    },\r\n    updateSuccess: false,\r\n  });\r\n  \r\n  useEffect(() => {\r\n    Axios.get('/api/profile')\r\n    .then(res => {\r\n      const decoded = jwt_decode(localStorage.jwtToken);\r\n      if(res.data.email === decoded.email) {\r\n        setUserState(userState => ({\r\n        ...userState,\r\n        values: {\r\n          ...userState.values,\r\n          firstName: res.data.firstName,\r\n          lastName: res.data.lastName,\r\n          phone: res.data.phone,\r\n          email: res.data.email,\r\n          street: res.data.address.street,\r\n          city: res.data.address.city,\r\n          state: res.data.address.state,\r\n          zipcode: res.data.address.zipcode,\r\n          avatar: res.data.avatar,\r\n        }\r\n      }));\r\n      } else {\r\n        console.log('email doesn\\'t match')\r\n      }\r\n\r\n      // console.log(res.data)\r\n\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }, [])\r\n\r\n  const handleChange = event => {\r\n        event.persist();\r\n    setUserState(userState =>({\r\n      ...userState,\r\n      values: {\r\n        ...userState.values,\r\n        [event.target.name]: event.target.value\r\n      }\r\n    }));\r\n  };\r\n\r\n    const handleUpdate = e => {\r\n    e.preventDefault();\r\n    const userDataUpdate = {\r\n      firstName: userState.values.firstName,\r\n      lastName: userState.values.lastName,\r\n      phone: userState.values.phone,\r\n      email: userState.values.email,\r\n      street: userState.values.street,\r\n      city: userState.values.city,\r\n      state: userState.values.state,\r\n      zipcode: userState.values.zipcode,\r\n      avatar: userState.values.avatar,\r\n    }\r\n    // console.log(userDataUpdate)\r\n    Axios.post('/api/profile', userDataUpdate)\r\n    .then(res => {\r\n      // console.log(res.data)\r\n      setUserState(userState =>({\r\n        ...userState,\r\n        updateSuccess: true\r\n      }));\r\n\r\n      setTimeout(() => {\r\n        setUserState(userState =>({\r\n          ...userState,\r\n          updateSuccess: false\r\n        }));\r\n      }, 3000)\r\n\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  const handleImageChange = (e) => {\r\n    // this.setState({uploading:true});\r\n    let formData = new FormData();\r\n    const config = {\r\n        header: {'content-type':'multipart/form-data'}\r\n    }\r\n    formData.append(\"images\",e.target.files[0]);\r\n\r\n    Axios.post('/api/profile/avatar', formData, config)\r\n    .then(res => {\r\n      setUserState(userState => ({\r\n        ...userState,\r\n        values: {\r\n          ...userState.values,\r\n          avatar: [...userState.values.avatar, res.data]\r\n        }\r\n      }))\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n }\r\n\r\n//  console.log(userState.values.avatar[userState.values.avatar.length - 1])\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent>\r\n        <div className={classes.details}>\r\n          <Avatar\r\n            className={classes.avatar}\r\n            src={userState.values.avatar && userState.values.avatar[userState.values.avatar.length - 1] ? userState.values.avatar[userState.values.avatar.length - 1].url : user.avatar}\r\n          />\r\n          <div className={classes.uploadbtn}>\r\n            <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                id=\"contained-button-file\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={handleImageChange}\r\n            />\r\n            <label htmlFor=\"contained-button-file\">\r\n                <Button  variant=\"outlined\" color=\"primary\" component=\"span\">\r\n                  UPLOAD PICTURE\r\n                </Button>\r\n            </label>\r\n          </div>\r\n\r\n\r\n        </div>\r\n        \r\n      </CardContent>\r\n      <Divider />\r\n      <CardContent>\r\n      <form autoComplete=\"off\" onSubmit={handleUpdate}>\r\n        <CardContent>\r\n          \r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={12}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"First name\"\r\n                margin=\"dense\"\r\n                name=\"firstName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={userState.values.firstName}\r\n                variant=\"outlined\"\r\n                placeholder='John'\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={12}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last name\"\r\n                margin=\"dense\"\r\n                name=\"lastName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={userState.values.lastName}\r\n                variant=\"outlined\"\r\n                placeholder='Doe'\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Phone Number\"\r\n                type=\"number\"\r\n                margin=\"dense\"\r\n                name=\"phone\"\r\n                onChange={handleChange}\r\n                required\r\n                value={userState.values.phone}\r\n                variant=\"outlined\"\r\n                placeholder='(305) 555-1234'\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email Address\"\r\n                type=\"email\"\r\n                margin=\"dense\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                required\r\n                value={userState.values.email}\r\n                variant=\"outlined\"\r\n                placeholder='you@email.com'\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={12}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Street\"\r\n                margin=\"dense\"\r\n                name=\"street\"\r\n                onChange={handleChange}\r\n                required\r\n                value={userState.values.street}\r\n                variant=\"outlined\"\r\n                placeholder='100 Happy Street'\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={4}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"City\"\r\n                margin=\"dense\"\r\n                name=\"city\"\r\n                onChange={handleChange}\r\n                required\r\n                value={userState.values.city}\r\n                variant=\"outlined\"\r\n                placeholder='Miami'\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={4}\r\n              xs={12}\r\n            >\r\n              <TextField // need to make this a dropdown with states from backend\r\n                fullWidth\r\n                label=\"State\"\r\n                margin=\"dense\"\r\n                name=\"state\"\r\n                onChange={handleChange}\r\n                required\r\n                value={userState.values.state}\r\n                variant=\"outlined\"\r\n                placeholder='Miami'\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={4}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Zip Code\"\r\n                type=\"number\"\r\n                margin=\"dense\"\r\n                name=\"zipcode\"\r\n                onChange={handleChange}\r\n                required\r\n                value={userState.values.zipcode}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            \r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        {userState.updateSuccess ? (\r\n          <Alert severity=\"success\">Profile updated</Alert>\r\n        ) : ''}\r\n        <CardActions>\r\n          <Button\r\n            className={classes.updateButton}\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            type='submit'\r\n            onSubmit={handleUpdate}\r\n          >\r\n            Update\r\n          </Button>\r\n        </CardActions>\r\n      </form>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAccountProfile.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default AccountProfile;\r\n"]},"metadata":{},"sourceType":"module"}