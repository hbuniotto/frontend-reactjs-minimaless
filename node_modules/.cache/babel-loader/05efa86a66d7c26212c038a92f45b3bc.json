{"ast":null,"code":"var _jsxFileName = \"/Users/humbertobuniotto/Desktop/Ironhack/Module3/frontend-reactjs-minimaless/src/views/Account/components/MyListings/MyListings.js\";\nimport React, { useEffect, useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardActions, CardContent, Typography, Divider, Button, Grid } from '@material-ui/core';\nimport { withRouter, Link } from 'react-router-dom';\nimport ListingContext from 'context/Listing/ListingContext';\nimport AuthContext from 'context/AuthContext/AuthContext';\nimport jwt_decode from 'jwt-decode';\nimport Axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  details: {\n    display: 'flex'\n  },\n  btnstyle: {\n    marginLeft: 'auto'\n  },\n  activeInactive: {\n    border: '1px solid black',\n    borderRadius: 5\n  },\n  price: {\n    textAlign: 'right'\n  },\n  productImg: {\n    height: 80,\n    width: 80,\n    borderRadius: 5\n  },\n  productDetail: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  image: {\n    textAlign: 'center'\n  },\n  description: {\n    paddingLeft: 45\n  }\n}));\n\nconst AccountProfile = props => {\n  const {\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const listingContext = useContext(ListingContext);\n  const {\n    getListings,\n    listingsData,\n    deleteAllImage,\n    deleteList\n  } = listingContext;\n  const authContext = useContext(AuthContext);\n  const {\n    getProfile,\n    loading,\n    profile,\n    stateChange,\n    profileChange\n  } = authContext;\n  const [id, setId] = useState();\n  const [alert, setAlert] = useState(false);\n  const decoded = jwt_decode(localStorage.jwtToken);\n  useEffect(() => {\n    getProfile();\n  }, [profileChange]);\n  useEffect(() => {\n    getListings();\n    setId();\n  }, [id]);\n\n  const handleDelete = list => {\n    let public_id = [];\n    list.images.map(image => {\n      public_id.push(image.public_id);\n    });\n    deleteAllImage(public_id);\n    deleteList(list._id);\n    setId(list._id);\n  };\n\n  const product = {\n    blank: '/images/products/blank.jpg'\n  };\n\n  const handleNewList = () => {\n    if (profile._id) {\n      props.history.push('/account/newlisting');\n    } else {\n      setAlert(true);\n      setTimeout(() => {\n        setAlert(false);\n      }, 2000);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 9,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"My Listings\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 4,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.btnstyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\" // href=\"/account/newlisting\"\n    ,\n    onClick: handleNewList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"NEW LISTING\"))))), alert && /*#__PURE__*/React.createElement(Typography, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }, \"Please update your profile before new listing\")), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }), listingsData.map((list, i) => list.user._id === decoded.id ? /*#__PURE__*/React.createElement(\"div\", {\n    key: list._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 71\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.productDetail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.image,\n    item: true,\n    lg: 1,\n    md: 1,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.productImg,\n    src: list.images[0] ? list.images[0].url : product.blank,\n    alt: \"product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    className: classes.description,\n    item: true,\n    md: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, list.title), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    style: {\n      textTransform: 'uppercase'\n    },\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, list.brand), /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, list.size)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 3,\n    md: 5,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.price,\n    gutterBottom: true,\n    variant: \"h4\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, \"$\", list.price, \" / day\"), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.btnstyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/account/newlisting/edit/${list._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button // className={classes.uploadButton}\n  , {\n    color: \"primary\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, \"UPDATE\")), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"outlined\" // color=\"primary\"\n    ,\n    onClick: () => handleDelete(list),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  }, \"DELETE\")))))) : ''), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }));\n};\n\nAccountProfile.propTypes = {\n  className: PropTypes.string\n};\nexport default withRouter(AccountProfile);","map":{"version":3,"sources":["/Users/humbertobuniotto/Desktop/Ironhack/Module3/frontend-reactjs-minimaless/src/views/Account/components/MyListings/MyListings.js"],"names":["React","useEffect","useContext","useState","PropTypes","clsx","makeStyles","Card","CardActions","CardContent","Typography","Divider","Button","Grid","withRouter","Link","ListingContext","AuthContext","jwt_decode","Axios","useStyles","theme","root","details","display","btnstyle","marginLeft","activeInactive","border","borderRadius","price","textAlign","productImg","height","width","productDetail","alignItems","justifyContent","image","description","paddingLeft","AccountProfile","props","className","rest","classes","listingContext","getListings","listingsData","deleteAllImage","deleteList","authContext","getProfile","loading","profile","stateChange","profileChange","id","setId","alert","setAlert","decoded","localStorage","jwtToken","handleDelete","list","public_id","images","map","push","_id","product","blank","handleNewList","history","setTimeout","i","user","url","title","textTransform","brand","size","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Typography,\r\n  Divider,\r\n  Button,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport ListingContext from 'context/Listing/ListingContext';\r\nimport AuthContext from 'context/AuthContext/AuthContext';\r\nimport jwt_decode from 'jwt-decode';\r\nimport Axios from 'axios';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  details: {\r\n    display: 'flex'\r\n  },\r\n  btnstyle: {\r\n    marginLeft: 'auto',\r\n  },\r\n  activeInactive: {\r\n    border: '1px solid black',\r\n    borderRadius: 5\r\n  },\r\n  price: {\r\n    textAlign: 'right',\r\n  },\r\n  productImg: {\r\n    height: 80,\r\n    width: 80,\r\n    borderRadius: 5\r\n  },\r\n  productDetail: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  image: {\r\n    textAlign: 'center'\r\n  },\r\n  description: {\r\n    paddingLeft: 45,\r\n  }\r\n}));\r\n\r\nconst AccountProfile = props => {\r\n  const { className, ...rest } = props;\r\n  const classes = useStyles();\r\n\r\n  const listingContext = useContext(ListingContext);\r\n  const { getListings, listingsData, deleteAllImage, deleteList } = listingContext;\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { getProfile, loading, profile, stateChange, profileChange } = authContext;\r\n\r\n  const [id, setId] = useState()\r\n  const [alert, setAlert] = useState(false)\r\n  \r\n  const decoded = jwt_decode(localStorage.jwtToken);\r\n\r\n  useEffect(() => {\r\n    getProfile()\r\n  }, [profileChange])\r\n\r\n  useEffect(() => {\r\n      getListings();\r\n      setId()\r\n  }, [id]);\r\n\r\n  const handleDelete = (list) => {\r\n    let public_id = [];\r\n    list.images.map(image => {\r\n      public_id.push(image.public_id)\r\n    })\r\n\r\n    deleteAllImage(public_id)\r\n    deleteList(list._id)\r\n    setId(list._id)\r\n  }\r\n\r\n  const product = {\r\n    blank: '/images/products/blank.jpg'\r\n  };\r\n\r\n  const handleNewList = () => {\r\n    if(profile._id) {\r\n      props.history.push('/account/newlisting')\r\n    } else {\r\n      setAlert(true)\r\n      setTimeout(() => {\r\n        setAlert(false)\r\n      }, 2000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent>\r\n        <div className={classes.details}>\r\n          <Grid container>\r\n            <Grid item md={9} xs={12}>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"h2\"\r\n            >\r\n              My Listings\r\n            </Typography>\r\n            </Grid>  \r\n            <Grid item md={4} xs={12}>\r\n            <CardActions className={classes.btnstyle}>\r\n            \r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              // href=\"/account/newlisting\"\r\n              onClick={handleNewList}\r\n            >\r\n              NEW LISTING\r\n            </Button>\r\n            </CardActions>\r\n            </Grid>\r\n          </Grid> \r\n        </div>\r\n        {alert && <Typography color=\"primary\">Please update your profile before new listing</Typography>}\r\n      </CardContent>\r\n      <Divider />\r\n\r\n        {listingsData.map((list, i) => list.user._id === decoded.id ? <div key={list._id}>\r\n        <Divider />\r\n        <CardContent>     \r\n          <Grid\r\n            container\r\n            className={classes.productDetail}\r\n          >\r\n            <Grid\r\n              className={classes.image}\r\n              item\r\n              lg={1}\r\n              md={1}\r\n              xs={9}\r\n            >\r\n            <img className={classes.productImg} src={ list.images[0] ? list.images[0].url : product.blank} alt=\"product\" />\r\n            </Grid>\r\n            <Grid\r\n              className={classes.description}\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            > \r\n              <Typography\r\n                gutterBottom\r\n                variant=\"h5\"\r\n              >\r\n                {/* Black suit */}\r\n                {list.title}\r\n              </Typography>\r\n\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"h6\"\r\n                style={{textTransform: 'uppercase'}}\r\n                color=\"textSecondary\"\r\n              >\r\n                {/* HUGO BOSS */}\r\n                {list.brand}\r\n              </Typography>\r\n              \r\n              <Typography\r\n                gutterBottom\r\n                variant=\"h6\"\r\n              >\r\n                {/* Medium | Practically New | Chic | Black */}\r\n                {list.size}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              lg={3}\r\n              md={5}\r\n              xs={12}\r\n            >\r\n            <Typography\r\n              className={classes.price}\r\n                gutterBottom\r\n                variant=\"h4\"\r\n                color=\"primary\"\r\n                >${list.price} / day</Typography>\r\n                <CardActions className={classes.btnstyle}>\r\n                  <Link to={`/account/newlisting/edit/${list._id}`}>\r\n                    <Button\r\n                      // className={classes.uploadButton}\r\n                      color=\"primary\"\r\n                      variant=\"outlined\"\r\n                    >\r\n                      UPDATE\r\n                    </Button>\r\n                  </Link>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      variant=\"outlined\"\r\n                      // color=\"primary\"\r\n                      onClick={() => handleDelete(list)}\r\n                    >\r\n                      DELETE \r\n                    </Button>\r\n                </CardActions> \r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </div>: '')}\r\n      <Divider />\r\n    </Card>\r\n  );\r\n};\r\n\r\nAccountProfile.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default withRouter(AccountProfile);\r\n             "]},"metadata":{},"sourceType":"module"}