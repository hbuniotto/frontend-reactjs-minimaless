{"ast":null,"code":"var _jsxFileName = \"/Users/humbertobuniotto/Desktop/Ironhack/Module3/frontend-reactjs-minimaless/src/views/Account/components/AccountDetails/AccountDetails.js\";\n// NEED TO ADD MY LISTINGS HERE\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, CardActions, Divider, Grid, Button, TextField, Typography } from '@material-ui/core';\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst AccountDetails = props => {\n  const {\n    className,\n    ...rest\n  } = props;\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    // will come from user model\n    demo1: '',\n    demo2: ''\n  });\n\n  const handleChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleUpdate = e => {\n    e.preventDefault();\n    const paymentInfo = {\n      demo1: values.demo1,\n      demo2: values.demo2\n    };\n    console.log(paymentInfo);\n  };\n\n  const states = [// this will come from the backend.\n  {\n    value: 'alabama',\n    label: 'Alabama'\n  }, {\n    value: 'new-york',\n    label: 'New York'\n  }, {\n    value: 'san-francisco',\n    label: 'San Francisco'\n  }];\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\" // noValidate\n    ,\n    onSubmit: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Payment Information\")))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Demo1\",\n    margin: \"dense\",\n    name: \"demo1\",\n    onChange: handleChange,\n    required: true // value={values.firstName}\n    ,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Demo2\",\n    margin: \"dense\",\n    name: \"demo2\",\n    onChange: handleChange,\n    required: true // value={values.lastName}\n    ,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.locationText,\n    color: \"textSecondary\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, \"Your payment information will only be shared with the renter of your items once the transaction has been confirmed.\")), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.uploadButton,\n    color: \"primary\",\n    variant: \"text\",\n    type: \"submit\",\n    onSubmit: handleUpdate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, \"Update\"))));\n};\n\nAccountDetails.propTypes = {\n  className: PropTypes.string\n};\nexport default AccountDetails;","map":{"version":3,"sources":["/Users/humbertobuniotto/Desktop/Ironhack/Module3/frontend-reactjs-minimaless/src/views/Account/components/AccountDetails/AccountDetails.js"],"names":["React","useState","clsx","PropTypes","makeStyles","Card","CardContent","CardActions","Divider","Grid","Button","TextField","Typography","useStyles","root","AccountDetails","props","className","rest","classes","values","setValues","demo1","demo2","handleChange","event","target","name","value","handleUpdate","e","preventDefault","paymentInfo","console","log","states","label","details","locationText","uploadButton","propTypes","string"],"mappings":"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","sourcesContent":["\r\n// NEED TO ADD MY LISTINGS HERE\r\n\r\nimport React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));  \r\n\r\nconst AccountDetails = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = useState({ // will come from user model\r\n    demo1: '',\r\n    demo2: ''\r\n  });\r\n\r\n  const handleChange = event => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const handleUpdate = e => {\r\n    e.preventDefault();\r\n    const paymentInfo = {\r\n      demo1: values.demo1,\r\n      demo2: values.demo2,\r\n    }\r\n    console.log(paymentInfo)\r\n  }\r\n\r\n  const states = [ // this will come from the backend.\r\n    {\r\n      value: 'alabama',\r\n      label: 'Alabama'\r\n    },\r\n    {\r\n      value: 'new-york',\r\n      label: 'New York'\r\n    },\r\n    {\r\n      value: 'san-francisco',\r\n      label: 'San Francisco'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <form\r\n        autoComplete=\"off\"\r\n        // noValidate\r\n        onSubmit={handleUpdate}\r\n      >\r\n            <CardContent>\r\n        <div className={classes.details}>\r\n          <div>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"h2\"\r\n            >\r\n              Payment Information\r\n            </Typography>    \r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={12}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Demo1\"\r\n                margin=\"dense\"\r\n                name=\"demo1\"\r\n                onChange={handleChange}\r\n                required\r\n                // value={values.firstName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={12}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Demo2\"\r\n                margin=\"dense\"\r\n                name=\"demo2\"\r\n                onChange={handleChange}\r\n                required\r\n                // value={values.lastName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardContent>\r\n        <Typography\r\n          className={classes.locationText}\r\n          color=\"textSecondary\"\r\n          variant=\"body1\"\r\n        >\r\n          Your payment information will only be shared with the renter of your items once the transaction has been confirmed.\r\n        </Typography>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          <Button\r\n            className={classes.uploadButton}\r\n            color=\"primary\"\r\n            variant=\"text\"\r\n            type='submit'\r\n            onSubmit={handleUpdate}\r\n          >\r\n            Update\r\n          </Button>\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAccountDetails.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default AccountDetails;\r\n"]},"metadata":{},"sourceType":"module"}